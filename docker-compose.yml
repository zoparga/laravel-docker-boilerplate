version: "3"

# Docker Volumes
volumes:
  database-volume:
  vol-meilisearch:
 
# Docker Networks
networks:
  app-network:
    driver: bridge
 
services:
# App php-fpm service
  app:
    build:
     context: ./docker/php
     args:
       APP_ENV: ${APP_ENV}
       PHP_VERSION: ${PHP_VERSION}
       REMOTE_WORKING_DIR: ${REMOTE_WORKING_DIR}
    #image: zoparga/php81-aio:1.0
    container_name: ${APP_NAME}_app
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}:delegated
      - ./docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/php/config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:delegated
    env_file: .env
    ports:
      - ${APP_PHP_PORT}:9001
#      - '5173:5173'
    networks:
      - app-network
  
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}_nginx
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}:delegated
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:delegated
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/:delegated
      - ./docker/nginx/ssl/:/etc/nginx/ssl/:delegated
    ports:
      - ${NGINX_80}:80
      - ${NGINX_443}:443
    depends_on:
      - app
    networks:
      - app-network
  
  database:
    image: mysql:${MYSQL_VERSION}
    #image: mariadb:latest
    command: --max_allowed_packet=2G      # Set max_allowed_packet to 256M (or any other value)
    container_name: ${APP_NAME}_database
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    restart: unless-stopped
    volumes:
      - ./mysqldata:/var/lib/mysql:delegated
      - ./mysql-backup:/home/mysql-backup:delegated
    depends_on:
      - app
    networks:
      - app-network
  
  redis:
    image: redis:${REDIS_VERSION}
    container_name: ${APP_NAME}_redis
    expose:
      - 6379
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - app-network
      
  # MAILHOG SERVICE TO TEST OUTGOING EMAILS
  mailhog:
    container_name: ${APP_NAME}_mailhog
    image:  mailhog/mailhog:latest
    ports:
      - ${MAILHOG_PUBLIC_PORT}:8025
      - ${MAILHOG_MAIL_PORT}:1025
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - app-network

  supervisord:
    build:
     context: ./docker/php
     args:
       APP_ENV: ${APP_ENV}
       PHP_VERSION: ${PHP_VERSION}
       REMOTE_WORKING_DIR: ${REMOTE_WORKING_DIR}
    #image: zoparga/php81-aio:1.0
    container_name: ${APP_NAME}_supervisord
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}:delegated
    env_file: .env
    entrypoint: ["supervisord", "--nodaemon", "--configuration", "/etc/supervisord.conf"]
    depends_on:
      - app
    networks:
      - app-network
  

  scheduler:
    build:
     context: ./docker/php
     args:
       APP_ENV: ${APP_ENV}
       PHP_VERSION: ${PHP_VERSION}
       REMOTE_WORKING_DIR: ${REMOTE_WORKING_DIR}
    #image: zoparga/php81-aio:1.0
    container_name: ${APP_NAME}_scheduler
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}:delegated
    env_file: .env
    working_dir: ${REMOTE_WORKING_DIR}
    entrypoint: ["php", "artisan", "schedule:work"]
    depends_on:
      - app
    networks:
      - app-network
   
#  meilisearch:
#    image: 'getmeili/meilisearch:latest'
#    ports:
#        - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
#    volumes:
#        - 'vol-meilisearch:/data.ms'
#    networks:
#        - app-network
#    healthcheck:
#        test: ["CMD", "wget", "--no-verbose", "--spider",  "http://localhost:7700/health"]
#        retries: 3
#        timeout: 5s
  

# Soketi 
    # soketi:
    #   image: quay.io/soketi/soketi:1.0-16-alpine
    #   container_name: ${APP_NAME}_soketi
    #   environment:
    #     - DEBUG=${SOKETI_DEBUG}
    #     - SOKETI_DEBUG=${SOKETI_DEBUG}
    #     - SOKETI_DEFAULT_APP_ID=${SOKETI_DEFAULT_APP_ID}
    #     - SOKETI_DEFAULT_APP_KEY=${SOKETI_DEFAULT_APP_KEY}
    #     - SOKETI_DEFAULT_APP_SECRET=${SOKETI_DEFAULT_APP_SECRET}
    #   ports:
    #     - "${SOKETI_PORT}:6001"
    #   networks:
    #     - app-network
    #   depends_on:
    #     - app
 
#phpmyadmin:
#   image: phpmyadmin/phpmyadmin
#   ports:
#       - 8289:80
#   environment:
#       PMA_HOST: database
#       MYSQL_USER: ${MYSQL_PASSWORD}
#       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#   networks:
#         - app-network


