version: "3"

services:
 # App php-fpm service
 app:
   build:
     context: ./docker/php
     args:
       APP_ENV: ${APP_ENV}
       PHP_VERSION: ${PHP_VERSION}
       REMOTE_WORKING_DIR: ${REMOTE_WORKING_DIR}
   container_name: ${APP_NAME}_app
   restart: unless-stopped
   volumes:
     - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}
     - ./docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
   env_file: .env
   ports:
     - ${APP_PHP_PORT}:9001
   networks:
     - app-network

 nginx:
   image: nginx:alpine
   container_name: ${APP_NAME}_nginx
   restart: unless-stopped
   volumes:
     - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}
     - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
     - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
     - ./docker/nginx/ssl/:/etc/nginx/ssl/
   ports:
     - ${NGINX_80}:80
     - ${NGINX_443}:443
   depends_on:
     - app
   networks:
     - app-network

 database:
   image: mysql:5.7
   command: --max_allowed_packet=2G      # Set max_allowed_packet to 256M (or any other value)
   container_name: ${APP_NAME}_database
   environment:
     MYSQL_DATABASE: ${MYSQL_DATABASE}
     MYSQL_USER: ${MYSQL_USER}
     MYSQL_PASSWORD: ${MYSQL_PASSWORD}
     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
   ports:
     - ${MYSQL_PORT}:3306
   restart: unless-stopped
   volumes:
     - ./mysqldata:/var/lib/mysql
     - ./mysql-backup:/home/mysql-backup
   depends_on:
     - app
   networks:
     - app-network

  mailhog:
   container_name: ${APP_NAME}_mailhog
   image:  mailhog/mailhog:latest
   ports:
     - ${MAILHOG_PUBLIC_PORT}:8025
     - ${MAILHOG_MAIL_PORT}:1025
   restart: unless-stopped
   depends_on:
     - app
   networks:
     - app-network

 #phpmyadmin:
 #   image: phpmyadmin/phpmyadmin
 #   ports:
 #       - 8289:80
 #   environment:
 #       PMA_HOST: database
 #       MYSQL_USER: ${MYSQL_PASSWORD}
 #       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
 #       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
 #   networks:
 #         - app-network
    
# Docker Volumes
volumes:
 database-volume:

# Docker Networks
networks:
 app-network:
   driver: bridge
