version: "3"
 
services:
# App php-fpm service
  app:
    build:
      context: ./docker/php
      args:
        APP_ENV: ${APP_ENV}
        PHP_VERSION: ${PHP_VERSION}
        REMOTE_WORKING_DIR: ${REMOTE_WORKING_DIR}
    #image: zoparga/php74-aio:0.7
    container_name: ${APP_NAME}_app
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}:delegated
      - ./docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./docker/php/config/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini:delegated
    env_file: .env
    ports:
      - ${APP_PHP_PORT}:9001
    networks:
      - app-network
  
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}_nginx
    restart: unless-stopped
    volumes:
      - ${LOCAL_WORKING_DIR}:${REMOTE_WORKING_DIR}:delegated
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:delegated
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/:delegated
      - ./docker/nginx/ssl/:/etc/nginx/ssl/:delegated
    ports:
      - ${NGINX_80}:80
      - ${NGINX_443}:443
    depends_on:
      - app
    networks:
      - app-network
  
  database:
    image: mysql:${MYSQL_VERSION}
    command: --max_allowed_packet=2G      # Set max_allowed_packet to 256M (or any other value)
    container_name: ${APP_NAME}_database
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    restart: unless-stopped
    volumes:
      - ./mysqldata:/var/lib/mysql:delegated
      - ./mysql-backup:/home/mysql-backup:delegated
    depends_on:
      - app
    networks:
      - app-network
  
  redis:
    image: redis:${REDIS_VERSION}
    container_name: ${APP_NAME}_redis
    expose:
      - 6379
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - app-network
  
  
  # mailhog:
  #   container_name: ${APP_NAME}_mailhog
  #   image:  mailhog/mailhog:latest
  #   ports:
  #     - ${MAILHOG_PUBLIC_PORT}:8025
  #     - ${MAILHOG_MAIL_PORT}:1025
  #   restart: unless-stopped
  #   depends_on:
  #     - app
  #   networks:
  #     - app-network
 
#phpmyadmin:
#   image: phpmyadmin/phpmyadmin
#   ports:
#       - 8289:80
#   environment:
#       PMA_HOST: database
#       MYSQL_USER: ${MYSQL_PASSWORD}
#       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#   networks:
#         - app-network
 
# Docker Volumes
volumes:
  database-volume:
 
# Docker Networks
networks:
  app-network:
    driver: bridge
 

